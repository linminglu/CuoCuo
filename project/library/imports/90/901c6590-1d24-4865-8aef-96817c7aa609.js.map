{"version":3,"sources":["../../../../../../assets/hall/script/hall/assets/hall/script/hall/hallSpineBtn.js"],"names":["cc","Class","extends","Component","properties","min","default","max","onLoad","allReady","nextTime","fun","utils","random","node","children","forEach","v","ready","anim","getComponent","sp","Skeleton","timeScale","setCompleteListener","update","dt","readySum","childrenCount"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,aAAK;AACDC,qBAAS;AADR,SADG;;AAKRC,aAAK;AACDD,qBAAS;AADR;AALG,KAHP;;AAaLE,UAbK,oBAaK;AACN,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,QAAL,GAAgBC,IAAIC,KAAJ,CAAUC,MAAV,CAAiB,KAAKR,GAAtB,EAA2B,KAAKE,GAAhC,CAAhB;AACA,aAAKO,IAAL,CAAUC,QAAV,CAAmBC,OAAnB,CAA2B,UAAUC,CAAV,EAAa;AACpCA,cAAEC,KAAF,GAAU,IAAV;AACA,gBAAIC,OAAOF,EAAEG,YAAF,CAAeC,GAAGC,QAAlB,CAAX;AACA,gBAAGH,IAAH,EAAS;AACLA,qBAAKI,SAAL,GAAiB,CAAjB;AACAJ,qBAAKK,mBAAL,CAAyB,YAAY;AACjCP,sBAAEC,KAAF,GAAU,IAAV;AACAC,yBAAKI,SAAL,GAAiB,CAAjB;AACH,iBAHD;AAIH;AAEJ,SAXD;AAYH,KA5BI;AA8BLE,UA9BK,kBA8BGC,EA9BH,EA8BO;AACR,YAAI,KAAKjB,QAAT,EAAmB;AACf,iBAAKC,QAAL,IAAiBgB,EAAjB;AACA,gBAAI,KAAKhB,QAAL,GAAgB,CAApB,EAAuB;AACnB;AACH;AACD,iBAAKI,IAAL,CAAUC,QAAV,CAAmBC,OAAnB,CAA2B,UAAUC,CAAV,EAAa;AACpCA,kBAAEC,KAAF,GAAU,KAAV;AACA,oBAAIC,OAAQF,EAAEG,YAAF,CAAeC,GAAGC,QAAlB,CAAZ;AACA,oBAAGH,IAAH,EAAS;AACLA,yBAAKI,SAAL,GAAiB,CAAjB;AACH;AAEJ,aAPD;AAQA,iBAAKd,QAAL,GAAgB,KAAhB;AACA,iBAAKC,QAAL,GAAgBC,IAAIC,KAAJ,CAAUC,MAAV,CAAiB,KAAKR,GAAtB,EAA2B,KAAKE,GAAhC,CAAhB;AACH,SAfD,MAeO;AACH,gBAAIoB,WAAW,CAAf;AACA,iBAAKb,IAAL,CAAUC,QAAV,CAAmBC,OAAnB,CAA2B,UAAUC,CAAV,EAAa;AACpC,oBAAIA,EAAEC,KAAN,EAAa;AACTS;AACH;AACJ,aAJD;AAKA,gBAAI,KAAKb,IAAL,CAAUc,aAAV,KAA4BD,QAAhC,EAA0C;AACtC,qBAAKlB,QAAL,GAAgB,IAAhB;AACH;AACJ;AACJ;AAzDI,CAAT","file":"hallSpineBtn.js","sourceRoot":"../../../../../../assets/hall/script/hall","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        min: {\n            default: 2,\n        },\n\n        max: {\n            default: 5,\n        },\n    },\n\n    onLoad () {\n        this.allReady = true;\n        this.nextTime = fun.utils.random(this.min, this.max);\n        this.node.children.forEach(function (v) {\n            v.ready = true;\n            let anim = v.getComponent(sp.Skeleton);\n            if(anim) {\n                anim.timeScale = 0;\n                anim.setCompleteListener(function () {\n                    v.ready = true;\n                    anim.timeScale = 0;\n                });\n            }\n            \n        });\n    },\n\n    update (dt) {\n        if (this.allReady) {\n            this.nextTime -= dt;\n            if (this.nextTime > 0) {\n                return;\n            }\n            this.node.children.forEach(function (v) {\n                v.ready = false;\n                let anim =  v.getComponent(sp.Skeleton);\n                if(anim) {\n                    anim.timeScale = 1;\n                }\n                \n            });\n            this.allReady = false;\n            this.nextTime = fun.utils.random(this.min, this.max);\n        } else {\n            let readySum = 0;\n            this.node.children.forEach(function (v) {\n                if (v.ready) {\n                    readySum++;\n                }\n            });\n            if (this.node.childrenCount === readySum) {\n                this.allReady = true;\n            }\n        }\n    },\n});\n"]}