{"version":3,"sources":["DDZ_CardTypeConfig.js"],"names":["cc","Class","extends","Component","properties","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAmBAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBI,CAER;AA3BI;;AA6BL;AA7BJ","file":"DDZ_CardTypeConfig.js","sourceRoot":"../../../../../../../assets/poker/DDZ/Script/Config","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n/*************\n *  牌类型枚举\n *  分为\n *  王炸 炸弹 单张 对子 三张 三带一 三带二 顺子 连对 飞机 四带二\n *  王炸最大，可以打任意其他的牌。 　　\n *  炸弹比王炸小，比其他牌大。\n *  都是炸弹时按牌的分值比大小。 　　\n *  除王炸和炸弹外，其他牌必须要牌型相同且总张数相同才能比大小。 　　\n *  单牌按分值比大小，依次是：大王 > 小王 >2>A>K>Q>J>10>9>8>7>6>5>4>3 ，不分花色。 　　\n *  对牌、三张牌都按分值比大小。 　　顺牌按最大的一张牌的分值来比大小。 　\n *  飞机带翅膀和四带二按其中的三顺和四张部分来比，带的牌不影响大小。\n *\n *  *******/\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}