{"version":3,"sources":["playerDataWahua.js"],"names":["UIPos","cc","Enum","xia","you","shang","zuo","SeatDir","Class","extends","Component","properties","uiPos","type","default","onLoad","playerUi","node","getComponent","setWait","roomInfo","fun","db","getData","userMap","playerNum","roomRule","userInfo","userId","UserId","toString","userName","UserName","ip","Ip","imageUrl","UserHeadUrl","_userId","isUserMap","_sort","sort","setData","destroy","setPlayerUi","_enterRoomName","event","getSum","add","bind","_offLineStateName","onLineStateEvent","onDestroy","remove","data","key","parseInt","getUserId","showOffLine","flag"],"mappings":"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","file":"playerDataWahua.js","sourceRoot":"../../../../../../../assets/mahjong/script/wahua/desk","sourcesContent":["const UIPos = cc.Enum({\n    xia: 0,\n    you: 1,\n    shang: 2,\n    zuo: 3,\n});\nconst SeatDir = ['xia', 'you', 'shang', 'zuo'];\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        uiPos: {\n            type: UIPos,\n            default: UIPos.xia,\n        },\n    },\n\n    onLoad () {\n        this.playerUi = this.node.getComponent('playerUiWahua');\n        this.playerUi.setWait();\n        let roomInfo = fun.db.getData('RoomInfo');\n        let userMap = roomInfo.userMap;\n        let playerNum = roomInfo.roomRule.playerNum;\n        let userInfo = fun.db.getData('UserInfo');\n        userInfo.userId = userInfo.UserId.toString();\n        userInfo.userName = userInfo.UserName;\n        userInfo.ip = userInfo.Ip;\n        userInfo.imageUrl = userInfo.UserHeadUrl;\n        this._userId = userInfo.userId;\n        let isUserMap = (userMap && userMap[this._userId]) ? true : false;\n        this._sort = 0;\n        if (isUserMap) {\n            this._sort = userMap[this._userId].sort;\n        }\n        switch (this.uiPos) {\n            case UIPos.xia:\n                {\n                    if (isUserMap) {\n                        this.playerUi.setData(userMap[this._userId], this.uiPos);\n                    } else {\n                        this.playerUi.setData(userInfo, this.uiPos);\n                    }\n                }\n                break;\n            case UIPos.you:\n                if (playerNum === 2) {\n                    this.node.destroy();\n                    return;\n                } else {\n                    this._sort = (this._sort + 1) > (playerNum - 1) ? 0 : (this._sort + 1);\n                }\n                break;\n            case UIPos.shang:\n                if (playerNum === 2) {\n                    this._sort = (this._sort + 1) > (playerNum - 1) ? 0 : (this._sort + 1);\n                } else {\n                    this._sort = (this._sort + 2) > (playerNum - 1) ? ((this._sort + 2 - playerNum) === 2 ? 1 : 0) : (this._sort + 2);\n                }\n                break;\n            case UIPos.zuo:\n                if (playerNum < 4) {\n                    this.node.destroy();\n                    return;\n                } else {\n                    this._sort = (this._sort - 1) < 0 ? 3 : (this._sort - 1);\n                }\n                break;\n            default:\n                break;\n        }\n        if (userMap) {\n            this.setPlayerUi(roomInfo);\n        }\n        this._enterRoomName = 'RoomInfo' + fun.event.getSum();\n        fun.event.add(this._enterRoomName, 'RoomInfo', this.setPlayerUi.bind(this));\n        this._offLineStateName = 'OffLineState' + fun.event.getSum();\n        fun.event.add(this._offLineStateName, 'OffLineState', this.onLineStateEvent.bind(this));\n    },\n\n    onDestroy() {\n        fun.event.remove(this._enterRoomName);\n        fun.event.remove(this._offLineStateName);\n    },\n\n    setPlayerUi(data) {\n        for (const key in data.userMap) {\n            if (data.userMap[key].sort === this._sort) {\n                this._userId = parseInt(key);\n                this.playerUi.setData(data.userMap[key], this.uiPos);\n                return;\n            }\n        }\n    },\n\n    getUserId() {\n        return this._userId;\n    },\n\n    onLineStateEvent(data) {\n        if (data.userId === this._userId) {\n            this.playerUi.showOffLine(data.flag);\n        }\n    },\n});\n"]}